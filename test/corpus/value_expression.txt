============================================
value_expression
============================================

extends fun c(self: Int, ) {
    // call_expression
    95.toString();

    // field_expression
    context().sender;

    // static_call_expression
    now();
    now ();

    // parenthesized_expression
    ( 10 );

    // map
    map<> {};
    map<Int, Int,> {};
    map<Address, Int as uint8> {
        address("yo"): 15,
        address("yo2"): 16,
    };

    // set
    set<> {};
    set<Int,> {
        10,
        20,
        100,
        ascii("tact"),
    };

    // instance_expression
    SendParameters{value: ton("1"), };

    // punned instance_expression
    SendParameters{value, };

    // integer
    0b101;
    0b1_1;
    0xf0f;
    0xf_f;
    0o707;
    0o7_7;
    042;
    909;
    9_9;

    // boolean
    true;
    false;

    // identifier
    name;

    // null
    null;

    // initOf
    initOf Contract(123, 123, );

    // codeOf
    codeOf Contract;

    // string
    "// \\ \" \n\r \t\v \b\f \u{0} \u{FFFFFF} \u0000 \xFF";

    // self
    self.toString();
}

---

(source_file
  (global_function
    attributes: (function_attributes)
    name: (identifier)
    parameters: (parameter_list
      (parameter
        name: (identifier)
        type: (type_identifier)))
    body: (function_body
      (comment)
      (expression_statement
        (method_call_expression
          object: (integer)
          name: (identifier)
          arguments: (argument_list)))
      (comment)
      (expression_statement
        (field_access_expression
          object: (static_call_expression
            name: (identifier)
            arguments: (argument_list))
          name: (identifier)))
      (comment)
      (expression_statement
        (static_call_expression
          name: (identifier)
          arguments: (argument_list)))
      (expression_statement
        (static_call_expression
          name: (identifier)
          arguments: (argument_list)))
      (comment)
      (expression_statement
        (parenthesized_expression
          (integer)))
      (comment)
      (expression_statement
        (map
          type: (map_type)
          body: (map_body)))
      (expression_statement
        (map
          type: (map_type
            key: (type_identifier)
            value: (type_identifier))
          body: (map_body)))
      (expression_statement
        (map
          type: (map_type
            key: (type_identifier)
            value: (type_identifier)
            tlb_value: (tlb_serialization
              type: (identifier)))
          body: (map_body
            (map_field
              key: (static_call_expression
                name: (identifier)
                arguments: (argument_list
                  (argument
                    value: (string))))
              value: (integer))
            (map_field
              key: (static_call_expression
                name: (identifier)
                arguments: (argument_list
                  (argument
                    value: (string))))
              value: (integer)))))
      (comment)
      (expression_statement
        (set
          type: (set_type)
          body: (set_body)))
      (expression_statement
        (set
          type: (set_type
            type: (type_identifier))
          body: (set_body
            (integer)
            (integer)
            (integer)
            (static_call_expression
              name: (identifier)
              arguments: (argument_list
                (argument
                  value: (string)))))))
      (comment)
      (expression_statement
        (instance_expression
          name: (identifier)
          arguments: (instance_argument_list
            (instance_argument
              name: (identifier)
              value: (static_call_expression
                name: (identifier)
                arguments: (argument_list
                  (argument
                    value: (string))))))))
      (comment)
      (expression_statement
        (instance_expression
          name: (identifier)
          arguments: (instance_argument_list
            (instance_argument
              name: (identifier)))))
      (comment)
      (expression_statement
        (integer))
      (expression_statement
        (integer))
      (expression_statement
        (integer))
      (expression_statement
        (integer))
      (expression_statement
        (integer))
      (expression_statement
        (integer))
      (expression_statement
        (integer))
      (expression_statement
        (integer))
      (expression_statement
        (integer))
      (comment)
      (expression_statement
        (boolean))
      (expression_statement
        (boolean))
      (comment)
      (expression_statement
        (identifier))
      (comment)
      (expression_statement
        (null))
      (comment)
      (expression_statement
        (initOf
          name: (identifier)
          arguments: (argument_list
            (argument
              value: (integer))
            (argument
              value: (integer)))))
      (comment)
      (expression_statement
        (codeOf
          name: (identifier)))
      (comment)
      (expression_statement
        (string
          (escape_sequence)
          (escape_sequence)
          (escape_sequence)
          (escape_sequence)
          (escape_sequence)
          (escape_sequence)
          (escape_sequence)
          (escape_sequence)
          (escape_sequence)
          (escape_sequence)
          (escape_sequence)
          (escape_sequence)))
      (comment)
      (expression_statement
        (method_call_expression
          object: (self)
          name: (identifier)
          arguments: (argument_list))))))
